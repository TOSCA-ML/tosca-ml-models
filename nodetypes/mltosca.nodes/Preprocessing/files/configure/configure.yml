---
- name: Preprocessing
  hosts: all
  gather_facts: yes

  tasks:
    - name: Create folder
      file:
        path: "{{ project_location }}/{{output_folder}}"
        state: directory

    - name: Copy files to external VM
      synchronize:
        src: create_pipeline.py
        dest: "{{ ansible_env.HOME }}/create_pipeline.py"
      when: function_id == "pipeline"

    - name: Execute background job
      shell: ". ~/anaconda3/bin/activate mltosca && nohup python create_pipeline.py {{project_location}}/{{output_folder}} {{project_location}}/{{previous_output_folder}} &"
      when: function_id == "pipeline"

    - name: Remove file
      file:
        path: "{{ ansible_env.HOME }}/create_pipeline.py"
        state: absent
      when: function_id == "pipeline"


    - name: Check if file exists
      stat:
        path: "{{project_location}}/{{output_folder}}/order.txt"
      register: file_info

    - name: get remote file contents
      command: "cat {{project_location}}/{{output_folder}}/order.txt"
      register: file_content
      when: file_info.stat.exists

    - name: Append input to file
      copy:
        dest: "{{project_location}}/{{output_folder}}/order.txt"
        content: |
          {% if file_info.stat.exists %}
          {{ file_content.stdout }}
          {% endif %}
          {{function_id}}
      when:
        - function_id != "pipeline"
        - parameters == "none"

    - name: Append input to file
      copy:
        dest: "{{project_location}}/{{output_folder}}/order.txt"
        content: |
          {% if file_info.stat.exists %}
          {{ file_content.stdout }}
          {% endif %}
          {{function_id}}-|-{{parameters}}
      when:
        - function_id != "pipeline"
        - parameters != "none"

    - name: Set project location
      set_stats:
        data:
          project_location: "{{project_location}}"

